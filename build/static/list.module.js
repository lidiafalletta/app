(window["__LOADABLE_LOADED_CHUNKS__"] = window["__LOADABLE_LOADED_CHUNKS__"] || []).push([["list"],{

/***/ "./packages/f1/src/components/list/list-item.js":
/*!******************************************************!*\
  !*** ./packages/f1/src/components/list/list-item.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _frontity_components_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @frontity/components/link */ \"./node_modules/@frontity/components/link/index.tsx\");\n/* harmony import */ var _featured_media__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../featured-media */ \"./packages/f1/src/components/featured-media.js\");\n/* harmony import */ var _frontity_components_image__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @frontity/components/image */ \"./node_modules/@frontity/components/image.tsx\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}/**\n * Item Component\n *\n * It renders the preview of a blog post. Each blog post contains\n * - Title: clickable title of the post\n * - Author: name of author and published date\n * - FeaturedMedia: the featured image/video of the post\n */const Item=({state,item})=>{const data=state.source.get(state.router.link);const author=state.source.author[item.author];const date=new Date(item.date);const isJobs=data.isAwsmJobOpeningsArchive;let readMoreLabel='Read more';if(isJobs){readMoreLabel='More Details';}return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxs\"])(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"Fragment\"],{children:[!isJobs&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxs\"])(Article,{children:[state.theme.featured.showOnList&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(_featured_media__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{id:item.featured_media}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxs\"])(\"div\",{className:\"bio-info\",children:[author&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxs\"])(StyledLink,{link:author.link,children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(_frontity_components_image__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{src:author.avatar_urls['48'],alt:author.name}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(AuthorName,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"b\",{children:author.name})})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxs\"])(PublishDate,{children:[\" \",date.toDateString()]})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{className:\"article-title\",link:item.link,children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(Title,{dangerouslySetInnerHTML:{__html:item.title.rendered}})}),item.excerpt&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(Excerpt,{dangerouslySetInnerHTML:{__html:item.excerpt.rendered}}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxs\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{className:\"redmore-btn\",link:item.link,children:[readMoreLabel,\"...\"]})]}),isJobs&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(Article,{className:\"job-article col-12 col-md-6 col-lg-4 align-self-strech\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxs\"])(\"div\",{className:\"job-box\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{className:\"job-title\",link:item.link,children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"h4\",{dangerouslySetInnerHTML:{__html:item.title.rendered}})}),item.excerpt&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(Excerpt,{dangerouslySetInnerHTML:{__html:item.excerpt.rendered}}),isJobs&&item.awsm_in_specs&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"div\",{dangerouslySetInnerHTML:{__html:item.awsm_in_specs}}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsxs\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{className:\"brand-btnhollow\",link:item.link,children:[readMoreLabel,\" \",Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"svg\",{width:\"14px\",height:\"9px\",viewBox:\"0 0 14 9\",version:\"1.1\",xmlns:\"http://www.w3.org/2000/svg\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"g\",{id:\"Symbols\",stroke:\"none\",strokeWidth:\"1\",fillRule:\"evenodd\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"g\",{id:\"Icons/Right-arrow\",transform:\"translate(0.000000, -2.000000)\",fillRule:\"nonzero\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"g\",{id:\"interface\",transform:\"translate(0.000000, 2.000000)\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"path\",{d:\"M13.7823071,3.98623766 L9.90356292,0.21135247 C9.61303376,-0.0713855917 9.14311798,-0.0703331717 8.85392477,0.213820214 C8.56476866,0.497937309 8.56588194,0.957481922 8.85641109,1.24025627 L11.460152,3.77419318 L0.742187132,3.77419318 C0.332277179,3.77419318 -3.09974268e-13,4.09913691 -3.09974268e-13,4.5 C-3.09974268e-13,4.90086317 0.332277179,5.2258069 0.742187132,5.2258069 L11.4601149,5.2258069 L8.8564482,7.75974381 C8.56591905,8.04251816 8.56480577,8.50206277 8.85396188,8.78617987 C9.14315509,9.07036955 9.61310798,9.07134938 9.90360003,8.78864761 L13.7816762,5.01445194 C14.0730218,4.73004453 14.0720941,4.26901201 13.7823071,3.98623766 Z\",id:\"Path\"})})})})})]})]})})]});};// Connect the Item to gain access to `state` as a prop\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(Item));const Article=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"article\", false?undefined:{target:\"e18hzt7j5\",label:\"Article\"})( false?undefined:{name:\"r6wcov\",styles:\"max-width:771px;margin:0 auto;position:relative;margin-bottom:3.5rem;.bio-info{margin-bottom:1rem;img{border-radius:50%;margin-right:0.5rem;}}.article-title{&:hover{h1{color:var(--brand);}}}.redmore-btn{color:var(--brand);transition:all .3s ease;&:hover{color:var(--black);}}&.job-article{max-width:100%;margin:0;margin-bottom:2rem;display:flex;flex-direction:column;.job-box{padding:2rem;background:var(--white);box-shadow:0px 2px 16px -9px rgba(0,0,0,0.5);border:1px solid #ececec;border-radius:5px;transition:all .3s ease;display:flex;flex-grow:1;flex-direction:column;.job-title{text-decoration:none;h4{transition:all .3s ease;}&:hover{h4{color:var(--brand);}}}.brand-btnhollow{margin:auto auto 0 0;color:var(--brand);transition:all .3s ease;svg{fill:var(--black);transition:all .3s ease;}&:hover{color:var(--black);svg{fill:var(--brand);}}}.awsm-job-specification-wrapper{margin-bottom:0.5rem;.awsm-job-specification-job-category{margin-bottom:0.2rem;.awsm-job-specification-term{&:before{content:'';background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='14' viewBox='0 0 24 24'%3E%3Cpath d='M12.23 15.5c-6.801 0-10.367-1.221-12.23-2.597v9.097h24v-8.949c-3.218 2.221-9.422 2.449-11.77 2.449zm1.77 2.532c0 1.087-.896 1.968-2 1.968s-2-.881-2-1.968v-1.032h4v1.032zm-14-8.541v-2.491h24v2.605c0 5.289-24 5.133-24-.114zm9-7.491c-1.104 0-2 .896-2 2v2h2v-1.5c0-.276.224-.5.5-.5h5c.276 0 .5.224.5.5v1.5h2v-2c0-1.104-.896-2-2-2h-6z'/%3E%3C/svg%3E\\\");width:14px;height:14px;position:relative;display:inline-block;margin-right:0.5rem;}}}.awsm-job-specification-job-location{.awsm-job-specification-term{&:before{content:'';background-image:url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='14' viewBox='0 0 24 24'%3E%3Cpath d='M12 0c-4.198 0-8 3.403-8 7.602 0 4.198 3.469 9.21 8 16.398 4.531-7.188 8-12.2 8-16.398 0-4.199-3.801-7.602-8-7.602zm0 14c-3.314 0-6-2.686-6-6s2.686-6 6-6 6 2.686 6 6-2.686 6-6 6z'/%3E%3C/svg%3E\\\");width:14px;height:14px;position:relative;display:inline-block;margin-right:0.5rem;}}}}&:hover{box-shadow:0 5px 20px 0 rgba(0,0,0,.23);}}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Title=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"h1\", false?undefined:{target:\"e18hzt7j4\",label:\"Title\"})( false?undefined:{name:\"yb6ciq\",styles:\"font-size:2rem;margin-bottom:1.5rem;color:var(--black);box-sizing:border-box;transition:all .3s ease\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTmlub1xcYXBwXFxhd3NtLXByb2plY3RcXHBhY2thZ2VzXFxmMVxcc3JjXFxjb21wb25lbnRzXFxsaXN0XFxsaXN0LWl0ZW0uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkx1QiIsImZpbGUiOiJDOlxcVXNlcnNcXE5pbm9cXGFwcFxcYXdzbS1wcm9qZWN0XFxwYWNrYWdlc1xcZjFcXHNyY1xcY29tcG9uZW50c1xcbGlzdFxcbGlzdC1pdGVtLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY29ubmVjdCwgc3R5bGVkIH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQgTGluayBmcm9tIFwiQGZyb250aXR5L2NvbXBvbmVudHMvbGlua1wiO1xuaW1wb3J0IEZlYXR1cmVkTWVkaWEgZnJvbSBcIi4uL2ZlYXR1cmVkLW1lZGlhXCI7XG5pbXBvcnQgSW1hZ2UgZnJvbSBcIkBmcm9udGl0eS9jb21wb25lbnRzL2ltYWdlXCI7XG4vKipcbiAqIEl0ZW0gQ29tcG9uZW50XG4gKlxuICogSXQgcmVuZGVycyB0aGUgcHJldmlldyBvZiBhIGJsb2cgcG9zdC4gRWFjaCBibG9nIHBvc3QgY29udGFpbnNcbiAqIC0gVGl0bGU6IGNsaWNrYWJsZSB0aXRsZSBvZiB0aGUgcG9zdFxuICogLSBBdXRob3I6IG5hbWUgb2YgYXV0aG9yIGFuZCBwdWJsaXNoZWQgZGF0ZVxuICogLSBGZWF0dXJlZE1lZGlhOiB0aGUgZmVhdHVyZWQgaW1hZ2UvdmlkZW8gb2YgdGhlIHBvc3RcbiAqL1xuY29uc3QgSXRlbSA9ICh7IHN0YXRlLCBpdGVtIH0pID0+IHtcbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuICBjb25zdCBhdXRob3IgPSBzdGF0ZS5zb3VyY2UuYXV0aG9yW2l0ZW0uYXV0aG9yXTtcbiAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKGl0ZW0uZGF0ZSk7XG4gIGNvbnN0IGlzSm9icyA9IGRhdGEuaXNBd3NtSm9iT3BlbmluZ3NBcmNoaXZlO1xuXG4gIGxldCByZWFkTW9yZUxhYmVsID0gJ1JlYWQgbW9yZSc7XG4gIGlmICggaXNKb2JzICkge1xuICAgIHJlYWRNb3JlTGFiZWwgPSAnTW9yZSBEZXRhaWxzJztcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIHshaXNKb2JzICYmIChcbiAgICAgICAgPEFydGljbGU+XG4gICAgICAgIHtzdGF0ZS50aGVtZS5mZWF0dXJlZC5zaG93T25MaXN0ICYmIChcbiAgICAgICAgICA8RmVhdHVyZWRNZWRpYSBpZD17aXRlbS5mZWF0dXJlZF9tZWRpYX0gLz5cbiAgICAgICAgKX1cblxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJpby1pbmZvXCI+XG4gICAgICAgICAgey8qIElmIHRoZSBwb3N0IGhhcyBhbiBhdXRob3IsIHdlIHJlbmRlciBhIGNsaWNrYWJsZSBhdXRob3IgdGV4dC4gKi99XG4gICAgICAgICAge2F1dGhvciAmJiAoXG4gICAgICAgICAgICA8U3R5bGVkTGluayBsaW5rPXthdXRob3IubGlua30+XG4gICAgICAgICAgICAgIDxJbWFnZSBzcmM9e2F1dGhvci5hdmF0YXJfdXJsc1snNDgnXX0gYWx0PXthdXRob3IubmFtZX0gLz5cbiAgICAgICAgICAgICAgPEF1dGhvck5hbWU+XG4gICAgICAgICAgICAgICAgPGI+e2F1dGhvci5uYW1lfTwvYj5cbiAgICAgICAgICAgICAgPC9BdXRob3JOYW1lPlxuICAgICAgICAgICAgPC9TdHlsZWRMaW5rPlxuICAgICAgICAgICl9XG4gICAgICAgICAgPFB1Ymxpc2hEYXRlPlxuICAgICAgICAgICAge1wiIFwifVxuICAgICAgICAgICAge2RhdGUudG9EYXRlU3RyaW5nKCl9XG4gICAgICAgICAgPC9QdWJsaXNoRGF0ZT5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPExpbmsgY2xhc3NOYW1lPVwiYXJ0aWNsZS10aXRsZVwiIGxpbms9e2l0ZW0ubGlua30+XG4gICAgICAgICAgPFRpdGxlIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogaXRlbS50aXRsZS5yZW5kZXJlZCB9fSAvPlxuICAgICAgICA8L0xpbms+XG5cbiAgICAgICAgey8qIElmIHRoZSBwb3N0IGhhcyBhbiBleGNlcnB0IChzaG9ydCBzdW1tYXJ5IHRleHQpLCB3ZSByZW5kZXIgaXQgKi99XG4gICAgICAgIHtpdGVtLmV4Y2VycHQgJiYgKFxuICAgICAgICAgIDxFeGNlcnB0IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogaXRlbS5leGNlcnB0LnJlbmRlcmVkIH19IC8+XG4gICAgICAgICl9XG4gICAgICAgIDxMaW5rIGNsYXNzTmFtZT1cInJlZG1vcmUtYnRuXCIgbGluaz17aXRlbS5saW5rfT57IHJlYWRNb3JlTGFiZWwgfS4uLjwvTGluaz5cbiAgICAgICAgPC9BcnRpY2xlPlxuICAgICAgKX1cbiAgICAgIHtpc0pvYnMgJiYgKFxuICAgICAgICA8QXJ0aWNsZSBjbGFzc05hbWU9XCJqb2ItYXJ0aWNsZSBjb2wtMTIgY29sLW1kLTYgY29sLWxnLTQgYWxpZ24tc2VsZi1zdHJlY2hcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJqb2ItYm94XCI+XG4gICAgICAgICAgICA8TGluayBjbGFzc05hbWU9XCJqb2ItdGl0bGVcIiBsaW5rPXtpdGVtLmxpbmt9PlxuICAgICAgICAgICAgICA8aDQgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBpdGVtLnRpdGxlLnJlbmRlcmVkIH19IC8+XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICB7LyogSWYgdGhlIHBvc3QgaGFzIGFuIGV4Y2VycHQgKHNob3J0IHN1bW1hcnkgdGV4dCksIHdlIHJlbmRlciBpdCAqL31cbiAgICAgICAgICAgIHtpdGVtLmV4Y2VycHQgJiYgKFxuICAgICAgICAgICAgICA8RXhjZXJwdCBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGl0ZW0uZXhjZXJwdC5yZW5kZXJlZCB9fSAvPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIHtpc0pvYnMgJiYgaXRlbS5hd3NtX2luX3NwZWNzICYmIChcbiAgICAgICAgICAgICAgPGRpdiBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGl0ZW0uYXdzbV9pbl9zcGVjcyB9fT48L2Rpdj5cbiAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgIDxMaW5rIGNsYXNzTmFtZT1cImJyYW5kLWJ0bmhvbGxvd1wiIGxpbms9e2l0ZW0ubGlua30+eyByZWFkTW9yZUxhYmVsIH0gPHN2ZyB3aWR0aD1cIjE0cHhcIiBoZWlnaHQ9XCI5cHhcIiB2aWV3Qm94PVwiMCAwIDE0IDlcIiB2ZXJzaW9uPVwiMS4xXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPjxnIGlkPVwiU3ltYm9sc1wiIHN0cm9rZT1cIm5vbmVcIiBzdHJva2VXaWR0aD1cIjFcIiBmaWxsUnVsZT1cImV2ZW5vZGRcIj48ZyBpZD1cIkljb25zL1JpZ2h0LWFycm93XCIgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDAuMDAwMDAwLCAtMi4wMDAwMDApXCIgIGZpbGxSdWxlPVwibm9uemVyb1wiPjxnIGlkPVwiaW50ZXJmYWNlXCIgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDAuMDAwMDAwLCAyLjAwMDAwMClcIj48cGF0aCBkPVwiTTEzLjc4MjMwNzEsMy45ODYyMzc2NiBMOS45MDM1NjI5MiwwLjIxMTM1MjQ3IEM5LjYxMzAzMzc2LC0wLjA3MTM4NTU5MTcgOS4xNDMxMTc5OCwtMC4wNzAzMzMxNzE3IDguODUzOTI0NzcsMC4yMTM4MjAyMTQgQzguNTY0NzY4NjYsMC40OTc5MzczMDkgOC41NjU4ODE5NCwwLjk1NzQ4MTkyMiA4Ljg1NjQxMTA5LDEuMjQwMjU2MjcgTDExLjQ2MDE1MiwzLjc3NDE5MzE4IEwwLjc0MjE4NzEzMiwzLjc3NDE5MzE4IEMwLjMzMjI3NzE3OSwzLjc3NDE5MzE4IC0zLjA5OTc0MjY4ZS0xMyw0LjA5OTEzNjkxIC0zLjA5OTc0MjY4ZS0xMyw0LjUgQy0zLjA5OTc0MjY4ZS0xMyw0LjkwMDg2MzE3IDAuMzMyMjc3MTc5LDUuMjI1ODA2OSAwLjc0MjE4NzEzMiw1LjIyNTgwNjkgTDExLjQ2MDExNDksNS4yMjU4MDY5IEw4Ljg1NjQ0ODIsNy43NTk3NDM4MSBDOC41NjU5MTkwNSw4LjA0MjUxODE2IDguNTY0ODA1NzcsOC41MDIwNjI3NyA4Ljg1Mzk2MTg4LDguNzg2MTc5ODcgQzkuMTQzMTU1MDksOS4wNzAzNjk1NSA5LjYxMzEwNzk4LDkuMDcxMzQ5MzggOS45MDM2MDAwMyw4Ljc4ODY0NzYxIEwxMy43ODE2NzYyLDUuMDE0NDUxOTQgQzE0LjA3MzAyMTgsNC43MzAwNDQ1MyAxNC4wNzIwOTQxLDQuMjY5MDEyMDEgMTMuNzgyMzA3MSwzLjk4NjIzNzY2IFpcIiBpZD1cIlBhdGhcIj48L3BhdGg+PC9nPjwvZz48L2c+PC9zdmc+PC9MaW5rPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9BcnRpY2xlPlxuICAgICAgKX1cbiAgICA8Lz5cbiAgKTtcbn07XG5cbi8vIENvbm5lY3QgdGhlIEl0ZW0gdG8gZ2FpbiBhY2Nlc3MgdG8gYHN0YXRlYCBhcyBhIHByb3BcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoSXRlbSk7XG5jb25zdCBBcnRpY2xlID0gc3R5bGVkLmFydGljbGVgXG4gIG1heC13aWR0aDo3NzFweDtcbiAgbWFyZ2luOjAgYXV0bztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tYm90dG9tOjMuNXJlbTtcbiAgLmJpby1pbmZvIHtcbiAgICBtYXJnaW4tYm90dG9tOjFyZW07XG4gICAgaW1nIHtcbiAgICAgIGJvcmRlci1yYWRpdXM6NTAlO1xuICAgICAgbWFyZ2luLXJpZ2h0OjAuNXJlbTtcbiAgICB9XG4gIH1cbiAgLmFydGljbGUtdGl0bGUgeyAgICBcbiAgICAmOmhvdmVyIHtcbiAgICAgIGgxIHtcbiAgICAgICAgY29sb3I6dmFyKC0tYnJhbmQpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICAucmVkbW9yZS1idG4ge1xuICAgIGNvbG9yOnZhcigtLWJyYW5kKTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjNzIGVhc2U7XG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjp2YXIoLS1ibGFjayk7XG4gICAgfVxuICB9XG4gIC8qKkpvYiBhcnRpY2xlcyoqL1xuICAmLmpvYi1hcnRpY2xlIHtcbiAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDJyZW07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIC5qb2ItYm94IHtcbiAgICAgIHBhZGRpbmc6IDJyZW07XG4gICAgICBiYWNrZ3JvdW5kOiB2YXIoLS13aGl0ZSk7XG4gICAgICBib3gtc2hhZG93OiAwcHggMnB4IDE2cHggLTlweCByZ2JhKDAsMCwwLDAuNSk7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZWNlY2VjO1xuICAgICAgYm9yZGVyLXJhZGl1czo1cHg7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgLjNzIGVhc2U7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1ncm93OiAxOyAgICAgIFxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIC5qb2ItdGl0bGUge1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246bm9uZTtcbiAgICAgICAgaDQge1xuICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAuM3MgZWFzZTtcbiAgICAgICAgfSAgICAgICAgXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIGg0IHtcbiAgICAgICAgICAgIGNvbG9yOnZhcigtLWJyYW5kKTtcbiAgICAgICAgICB9ICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICB9XG4gICAgICAuYnJhbmQtYnRuaG9sbG93IHsgICAgICAgIFxuICAgICAgICBtYXJnaW46IGF1dG8gYXV0byAwIDA7XG4gICAgICAgIGNvbG9yOnZhcigtLWJyYW5kKTtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIC4zcyBlYXNlO1xuICAgICAgICBzdmcge1xuICAgICAgICAgIGZpbGw6dmFyKC0tYmxhY2spO1xuICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAuM3MgZWFzZTtcbiAgICAgICAgfVxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICBjb2xvcjp2YXIoLS1ibGFjayk7XG4gICAgICAgICAgc3ZnIHtcbiAgICAgICAgICAgIGZpbGw6dmFyKC0tYnJhbmQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgLmF3c20tam9iLXNwZWNpZmljYXRpb24td3JhcHBlciB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206MC41cmVtO1xuICAgICAgICAuYXdzbS1qb2Itc3BlY2lmaWNhdGlvbi1qb2ItY2F0ZWdvcnkge1xuICAgICAgICAgIC5hd3NtLWpvYi1zcGVjaWZpY2F0aW9uLXRlcm17XG4gICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMTQnIGhlaWdodD0nMTQnIHZpZXdCb3g9JzAgMCAyNCAyNCclM0UlM0NwYXRoIGQ9J00xMi4yMyAxNS41Yy02LjgwMSAwLTEwLjM2Ny0xLjIyMS0xMi4yMy0yLjU5N3Y5LjA5N2gyNHYtOC45NDljLTMuMjE4IDIuMjIxLTkuNDIyIDIuNDQ5LTExLjc3IDIuNDQ5em0xLjc3IDIuNTMyYzAgMS4wODctLjg5NiAxLjk2OC0yIDEuOTY4cy0yLS44ODEtMi0xLjk2OHYtMS4wMzJoNHYxLjAzMnptLTE0LTguNTQxdi0yLjQ5MWgyNHYyLjYwNWMwIDUuMjg5LTI0IDUuMTMzLTI0LS4xMTR6bTktNy40OTFjLTEuMTA0IDAtMiAuODk2LTIgMnYyaDJ2LTEuNWMwLS4yNzYuMjI0LS41LjUtLjVoNWMuMjc2IDAgLjUuMjI0LjUuNXYxLjVoMnYtMmMwLTEuMTA0LS44OTYtMi0yLTJoLTZ6Jy8lM0UlM0Mvc3ZnJTNFXCIpO1xuICAgICAgICAgICAgICB3aWR0aDoxNHB4O1xuICAgICAgICAgICAgICBoZWlnaHQ6MTRweDtcbiAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMC41cmVtO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBtYXJnaW4tYm90dG9tOjAuMnJlbTtcbiAgICAgICAgfVxuICAgICAgICAuYXdzbS1qb2Itc3BlY2lmaWNhdGlvbi1qb2ItbG9jYXRpb24ge1xuICAgICAgICAgIC5hd3NtLWpvYi1zcGVjaWZpY2F0aW9uLXRlcm17XG4gICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMTQnIGhlaWdodD0nMTQnIHZpZXdCb3g9JzAgMCAyNCAyNCclM0UlM0NwYXRoIGQ9J00xMiAwYy00LjE5OCAwLTggMy40MDMtOCA3LjYwMiAwIDQuMTk4IDMuNDY5IDkuMjEgOCAxNi4zOTggNC41MzEtNy4xODggOC0xMi4yIDgtMTYuMzk4IDAtNC4xOTktMy44MDEtNy42MDItOC03LjYwMnptMCAxNGMtMy4zMTQgMC02LTIuNjg2LTYtNnMyLjY4Ni02IDYtNiA2IDIuNjg2IDYgNi0yLjY4NiA2LTYgNnonLyUzRSUzQy9zdmclM0VcIik7XG4gICAgICAgICAgICAgIHdpZHRoOjE0cHg7XG4gICAgICAgICAgICAgIGhlaWdodDoxNHB4O1xuICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwLjVyZW07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgYm94LXNoYWRvdzogMCA1cHggMjBweCAwIHJnYmEoMCwwLDAsLjIzKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbmA7XG5cbmNvbnN0IFRpdGxlID0gc3R5bGVkLmgxYFxuICBmb250LXNpemU6IDJyZW07XG4gIG1hcmdpbi1ib3R0b206MS41cmVtO1xuICBjb2xvcjogdmFyKC0tYmxhY2spO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICB0cmFuc2l0aW9uOiBhbGwgLjNzIGVhc2U7XG5gO1xuXG5jb25zdCBBdXRob3JOYW1lID0gc3R5bGVkLnNwYW5gXG4gIGNvbG9yOiB2YXIoLS1ibGFjayk7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgbWFyZ2luLXJpZ2h0OjFyZW07XG5gO1xuXG5jb25zdCBTdHlsZWRMaW5rID0gc3R5bGVkKExpbmspYFxuICBwYWRkaW5nOiAxNXB4IDA7XG5gO1xuXG5jb25zdCBQdWJsaXNoRGF0ZSA9IHN0eWxlZC5zcGFuYFxuICBjb2xvcjogdmFyKC0tZ3JheSk7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG5gO1xuXG5jb25zdCBFeGNlcnB0ID0gc3R5bGVkLmRpdmBcbiAgbGluZS1oZWlnaHQ6IDEuNmVtO1xuYDtcbiJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const AuthorName=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"span\", false?undefined:{target:\"e18hzt7j3\",label:\"AuthorName\"})( false?undefined:{name:\"8ebm7h\",styles:\"color:var(--black);font-size:1rem;margin-right:1rem\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const StyledLink=/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], false?undefined:{target:\"e18hzt7j2\",label:\"StyledLink\"})( false?undefined:{name:\"1k93czn\",styles:\"padding:15px 0\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const PublishDate=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"span\", false?undefined:{target:\"e18hzt7j1\",label:\"PublishDate\"})( false?undefined:{name:\"1w8tj2\",styles:\"color:var(--gray);font-size:0.875rem\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Excerpt=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"e18hzt7j0\",label:\"Excerpt\"})( false?undefined:{name:\"dw7rhg\",styles:\"line-height:1.6em\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/f1/src/components/list/list-item.js\n");

/***/ }),

/***/ "./packages/f1/src/components/list/list.js":
/*!*************************************************!*\
  !*** ./packages/f1/src/components/list/list.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _list_item__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./list-item */ \"./packages/f1/src/components/list/list-item.js\");\n/* harmony import */ var _pagination__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pagination */ \"./packages/f1/src/components/list/pagination.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}const List=({state})=>{// Get the data of the current list.\nconst data=state.source.get(state.router.link);let title='Blog';if(data.isAwsmJobOpeningsArchive){title='Career';}return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(Container,{children:[data.isPostArchive&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(Header,{children:title}),data.isAwsmJobOpeningsArchive&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(Header,{children:title}),data.isTaxonomy&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(Header,{children:[data.taxonomy,\":\",\" \",Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"b\",{children:Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"decode\"])(state.source[data.taxonomy][data.id].name)})]}),data.isAuthor&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(Header,{children:[\"Author: \",Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"b\",{children:Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"decode\"])(state.source.author[data.id].name)})]}),data.isAwsmJobOpeningsArchive&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"section\",{className:\"section job-listing\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{className:\"container\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{className:\"row\",children:data.items.map(({type,id})=>{const item=state.source[type][id];// Render one Item component for each one.\nreturn Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_list_item__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{item:item},item.id);})})})}),!data.isAwsmJobOpeningsArchive&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"Fragment\"],{children:data.items.map(({type,id})=>{const item=state.source[type][id];// Render one Item component for each one.\nreturn Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_list_item__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{item:item},item.id);})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(_pagination__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{})]});};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(List));const Container=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"section\", false?undefined:{target:\"epohgmq1\",label:\"Container\"})( false?undefined:{name:\"15m48wv\",styles:\"width:1200px;margin:0 auto;padding-right:15px;padding-left:15px;list-style:none\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTmlub1xcYXBwXFxhd3NtLXByb2plY3RcXHBhY2thZ2VzXFxmMVxcc3JjXFxjb21wb25lbnRzXFxsaXN0XFxsaXN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBFZ0MiLCJmaWxlIjoiQzpcXFVzZXJzXFxOaW5vXFxhcHBcXGF3c20tcHJvamVjdFxccGFja2FnZXNcXGYxXFxzcmNcXGNvbXBvbmVudHNcXGxpc3RcXGxpc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQsIGRlY29kZSB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IEl0ZW0gZnJvbSBcIi4vbGlzdC1pdGVtXCI7XG5pbXBvcnQgUGFnaW5hdGlvbiBmcm9tIFwiLi9wYWdpbmF0aW9uXCI7XG5cbmNvbnN0IExpc3QgPSAoeyBzdGF0ZSB9KSA9PiB7XG4gIC8vIEdldCB0aGUgZGF0YSBvZiB0aGUgY3VycmVudCBsaXN0LlxuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gIGxldCB0aXRsZSA9ICdCbG9nJztcbiAgaWYgKCBkYXRhLmlzQXdzbUpvYk9wZW5pbmdzQXJjaGl2ZSApIHtcbiAgICB0aXRsZSA9ICdDYXJlZXInO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyPlxuICAgICAgey8qIElmIHRoZSBsaXN0IGlzIGEgYmxvZyBwb3N0cywgd2UgcmVuZGVyIGEgdGl0bGUuICovfVxuICAgICAge2RhdGEuaXNQb3N0QXJjaGl2ZSAmJiAoXG4gICAgICAgIDxIZWFkZXI+XG4gICAgICAgICAge3RpdGxlfVxuICAgICAgICA8L0hlYWRlcj5cbiAgICAgICl9XG4gICAgICAgIHsvKiBJZiB0aGUgbGlzdCBpcyBhIEFXU00gSm9iIGNhcmVlciBwYWdlLCB3ZSByZW5kZXIgYSB0aXRsZS4gKi99XG4gICAgICB7ZGF0YS5pc0F3c21Kb2JPcGVuaW5nc0FyY2hpdmUgJiYgKFxuICAgICAgICA8SGVhZGVyPlxuICAgICAgICAgIHt0aXRsZX1cbiAgICAgICAgPC9IZWFkZXI+XG4gICAgICApfVxuICAgICAgey8qIElmIHRoZSBsaXN0IGlzIGEgdGF4b25vbXksIHdlIHJlbmRlciBhIHRpdGxlLiAqL31cbiAgICAgIHtkYXRhLmlzVGF4b25vbXkgJiYgKFxuICAgICAgICA8SGVhZGVyPlxuICAgICAgICAgIHtkYXRhLnRheG9ub215fTp7XCIgXCJ9XG4gICAgICAgICAgPGI+e2RlY29kZShzdGF0ZS5zb3VyY2VbZGF0YS50YXhvbm9teV1bZGF0YS5pZF0ubmFtZSl9PC9iPlxuICAgICAgICA8L0hlYWRlcj5cbiAgICAgICl9XG5cbiAgICAgIHsvKiBJZiB0aGUgbGlzdCBpcyBmb3IgYSBzcGVjaWZpYyBhdXRob3IsIHdlIHJlbmRlciBhIHRpdGxlLiAqL31cbiAgICAgIHtkYXRhLmlzQXV0aG9yICYmIChcbiAgICAgICAgPEhlYWRlcj5cbiAgICAgICAgICBBdXRob3I6IDxiPntkZWNvZGUoc3RhdGUuc291cmNlLmF1dGhvcltkYXRhLmlkXS5uYW1lKX08L2I+XG4gICAgICAgIDwvSGVhZGVyPlxuICAgICAgKX1cbiAgICBcbiAgICAgIHsvKiBJdGVyYXRlIG92ZXIgdGhlIGl0ZW1zIG9mIHRoZSBsaXN0LiAqL31cbiAgICAgIHtkYXRhLmlzQXdzbUpvYk9wZW5pbmdzQXJjaGl2ZSAmJiAoXG4gICAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwic2VjdGlvbiBqb2ItbGlzdGluZ1wiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3dcIj5cbiAgICAgICAgICAgICAgey8qIEl0ZXJhdGUgb3ZlciB0aGUgaXRlbXMgb2YgdGhlIGxpc3QuICovfVxuICAgICAgICAgICAgICB7ZGF0YS5pdGVtcy5tYXAoKHsgdHlwZSwgaWQgfSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW0gPSBzdGF0ZS5zb3VyY2VbdHlwZV1baWRdO1xuICAgICAgICAgICAgICAgIC8vIFJlbmRlciBvbmUgSXRlbSBjb21wb25lbnQgZm9yIGVhY2ggb25lLlxuICAgICAgICAgICAgICAgIHJldHVybiA8SXRlbSBrZXk9e2l0ZW0uaWR9IGl0ZW09e2l0ZW19IC8+O1xuICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgKX1cbiAgICAgIHshZGF0YS5pc0F3c21Kb2JPcGVuaW5nc0FyY2hpdmUgJiYgKFxuICAgICAgICAgIDw+XG4gICAgICAgICAge2RhdGEuaXRlbXMubWFwKCh7IHR5cGUsIGlkIH0pID0+IHtcbiAgICAgICAgICAgICAgY29uc3QgaXRlbSA9IHN0YXRlLnNvdXJjZVt0eXBlXVtpZF07XG4gICAgICAgICAgICAgIC8vIFJlbmRlciBvbmUgSXRlbSBjb21wb25lbnQgZm9yIGVhY2ggb25lLlxuICAgICAgICAgICAgICByZXR1cm4gPEl0ZW0ga2V5PXtpdGVtLmlkfSBpdGVtPXtpdGVtfSAvPjtcbiAgICAgICAgICAgIH0pfVxuICAgICAgICAgIDwvPlxuICAgICAgKX1cbiAgICAgIFxuICAgICAgPFBhZ2luYXRpb24gLz5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoTGlzdCk7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5zZWN0aW9uYFxuICB3aWR0aDogMTIwMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZy1yaWdodDogMTVweDtcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICBsaXN0LXN0eWxlOiBub25lO1xuYDtcblxuY29uc3QgSGVhZGVyID0gc3R5bGVkLmgxYFxuICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTozcmVtO1xuXG5gO1xuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Header=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"h1\", false?undefined:{target:\"epohgmq0\",label:\"Header\"})( false?undefined:{name:\"jnqp23\",styles:\"text-align:center;margin-bottom:3rem\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTmlub1xcYXBwXFxhd3NtLXByb2plY3RcXHBhY2thZ2VzXFxmMVxcc3JjXFxjb21wb25lbnRzXFxsaXN0XFxsaXN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtGd0IiLCJmaWxlIjoiQzpcXFVzZXJzXFxOaW5vXFxhcHBcXGF3c20tcHJvamVjdFxccGFja2FnZXNcXGYxXFxzcmNcXGNvbXBvbmVudHNcXGxpc3RcXGxpc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQsIGRlY29kZSB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IEl0ZW0gZnJvbSBcIi4vbGlzdC1pdGVtXCI7XG5pbXBvcnQgUGFnaW5hdGlvbiBmcm9tIFwiLi9wYWdpbmF0aW9uXCI7XG5cbmNvbnN0IExpc3QgPSAoeyBzdGF0ZSB9KSA9PiB7XG4gIC8vIEdldCB0aGUgZGF0YSBvZiB0aGUgY3VycmVudCBsaXN0LlxuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gIGxldCB0aXRsZSA9ICdCbG9nJztcbiAgaWYgKCBkYXRhLmlzQXdzbUpvYk9wZW5pbmdzQXJjaGl2ZSApIHtcbiAgICB0aXRsZSA9ICdDYXJlZXInO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyPlxuICAgICAgey8qIElmIHRoZSBsaXN0IGlzIGEgYmxvZyBwb3N0cywgd2UgcmVuZGVyIGEgdGl0bGUuICovfVxuICAgICAge2RhdGEuaXNQb3N0QXJjaGl2ZSAmJiAoXG4gICAgICAgIDxIZWFkZXI+XG4gICAgICAgICAge3RpdGxlfVxuICAgICAgICA8L0hlYWRlcj5cbiAgICAgICl9XG4gICAgICAgIHsvKiBJZiB0aGUgbGlzdCBpcyBhIEFXU00gSm9iIGNhcmVlciBwYWdlLCB3ZSByZW5kZXIgYSB0aXRsZS4gKi99XG4gICAgICB7ZGF0YS5pc0F3c21Kb2JPcGVuaW5nc0FyY2hpdmUgJiYgKFxuICAgICAgICA8SGVhZGVyPlxuICAgICAgICAgIHt0aXRsZX1cbiAgICAgICAgPC9IZWFkZXI+XG4gICAgICApfVxuICAgICAgey8qIElmIHRoZSBsaXN0IGlzIGEgdGF4b25vbXksIHdlIHJlbmRlciBhIHRpdGxlLiAqL31cbiAgICAgIHtkYXRhLmlzVGF4b25vbXkgJiYgKFxuICAgICAgICA8SGVhZGVyPlxuICAgICAgICAgIHtkYXRhLnRheG9ub215fTp7XCIgXCJ9XG4gICAgICAgICAgPGI+e2RlY29kZShzdGF0ZS5zb3VyY2VbZGF0YS50YXhvbm9teV1bZGF0YS5pZF0ubmFtZSl9PC9iPlxuICAgICAgICA8L0hlYWRlcj5cbiAgICAgICl9XG5cbiAgICAgIHsvKiBJZiB0aGUgbGlzdCBpcyBmb3IgYSBzcGVjaWZpYyBhdXRob3IsIHdlIHJlbmRlciBhIHRpdGxlLiAqL31cbiAgICAgIHtkYXRhLmlzQXV0aG9yICYmIChcbiAgICAgICAgPEhlYWRlcj5cbiAgICAgICAgICBBdXRob3I6IDxiPntkZWNvZGUoc3RhdGUuc291cmNlLmF1dGhvcltkYXRhLmlkXS5uYW1lKX08L2I+XG4gICAgICAgIDwvSGVhZGVyPlxuICAgICAgKX1cbiAgICBcbiAgICAgIHsvKiBJdGVyYXRlIG92ZXIgdGhlIGl0ZW1zIG9mIHRoZSBsaXN0LiAqL31cbiAgICAgIHtkYXRhLmlzQXdzbUpvYk9wZW5pbmdzQXJjaGl2ZSAmJiAoXG4gICAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwic2VjdGlvbiBqb2ItbGlzdGluZ1wiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXJcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3dcIj5cbiAgICAgICAgICAgICAgey8qIEl0ZXJhdGUgb3ZlciB0aGUgaXRlbXMgb2YgdGhlIGxpc3QuICovfVxuICAgICAgICAgICAgICB7ZGF0YS5pdGVtcy5tYXAoKHsgdHlwZSwgaWQgfSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW0gPSBzdGF0ZS5zb3VyY2VbdHlwZV1baWRdO1xuICAgICAgICAgICAgICAgIC8vIFJlbmRlciBvbmUgSXRlbSBjb21wb25lbnQgZm9yIGVhY2ggb25lLlxuICAgICAgICAgICAgICAgIHJldHVybiA8SXRlbSBrZXk9e2l0ZW0uaWR9IGl0ZW09e2l0ZW19IC8+O1xuICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgKX1cbiAgICAgIHshZGF0YS5pc0F3c21Kb2JPcGVuaW5nc0FyY2hpdmUgJiYgKFxuICAgICAgICAgIDw+XG4gICAgICAgICAge2RhdGEuaXRlbXMubWFwKCh7IHR5cGUsIGlkIH0pID0+IHtcbiAgICAgICAgICAgICAgY29uc3QgaXRlbSA9IHN0YXRlLnNvdXJjZVt0eXBlXVtpZF07XG4gICAgICAgICAgICAgIC8vIFJlbmRlciBvbmUgSXRlbSBjb21wb25lbnQgZm9yIGVhY2ggb25lLlxuICAgICAgICAgICAgICByZXR1cm4gPEl0ZW0ga2V5PXtpdGVtLmlkfSBpdGVtPXtpdGVtfSAvPjtcbiAgICAgICAgICAgIH0pfVxuICAgICAgICAgIDwvPlxuICAgICAgKX1cbiAgICAgIFxuICAgICAgPFBhZ2luYXRpb24gLz5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoTGlzdCk7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5zZWN0aW9uYFxuICB3aWR0aDogMTIwMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZy1yaWdodDogMTVweDtcbiAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICBsaXN0LXN0eWxlOiBub25lO1xuYDtcblxuY29uc3QgSGVhZGVyID0gc3R5bGVkLmgxYFxuICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTozcmVtO1xuXG5gO1xuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9mMS9zcmMvY29tcG9uZW50cy9saXN0L2xpc3QuanM/NmRiYiJdLCJuYW1lcyI6WyJMaXN0Iiwic3RhdGUiLCJkYXRhIiwic291cmNlIiwiZ2V0Iiwicm91dGVyIiwibGluayIsInRpdGxlIiwiaXNBd3NtSm9iT3BlbmluZ3NBcmNoaXZlIiwiaXNQb3N0QXJjaGl2ZSIsImlzVGF4b25vbXkiLCJ0YXhvbm9teSIsImRlY29kZSIsImlkIiwibmFtZSIsImlzQXV0aG9yIiwiYXV0aG9yIiwiaXRlbXMiLCJtYXAiLCJ0eXBlIiwiaXRlbSIsImNvbm5lY3QiLCJDb250YWluZXIiLCJIZWFkZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O3FSQUtBLEtBQU1BLEtBQUksQ0FBRyxDQUFDLENBQUVDLEtBQUYsQ0FBRCxHQUFlLENBQzFCO0FBQ0EsS0FBTUMsS0FBSSxDQUFHRCxLQUFLLENBQUNFLE1BQU4sQ0FBYUMsR0FBYixDQUFpQkgsS0FBSyxDQUFDSSxNQUFOLENBQWFDLElBQTlCLENBQWIsQ0FDQSxHQUFJQyxNQUFLLENBQUcsTUFBWixDQUNBLEdBQUtMLElBQUksQ0FBQ00sd0JBQVYsQ0FBcUMsQ0FDbkNELEtBQUssQ0FBRyxRQUFSLENBQ0QsQ0FFRCxNQUNFLHlFQUFDLFNBQUQsWUFFR0wsSUFBSSxDQUFDTyxhQUFMLEVBQ0MsdUVBQUMsTUFBRCxXQUNHRixLQURILEVBSEosQ0FRR0wsSUFBSSxDQUFDTSx3QkFBTCxFQUNDLHVFQUFDLE1BQUQsV0FDR0QsS0FESCxFQVRKLENBY0dMLElBQUksQ0FBQ1EsVUFBTCxFQUNDLHdFQUFDLE1BQUQsWUFDR1IsSUFBSSxDQUFDUyxRQURSLEtBQ21CLEdBRG5CLENBRUUscUZBQUlDLHVEQUFNLENBQUNYLEtBQUssQ0FBQ0UsTUFBTixDQUFhRCxJQUFJLENBQUNTLFFBQWxCLEVBQTRCVCxJQUFJLENBQUNXLEVBQWpDLEVBQXFDQyxJQUF0QyxDQUFWLEVBRkYsR0FmSixDQXNCR1osSUFBSSxDQUFDYSxRQUFMLEVBQ0Msd0VBQUMsTUFBRCx1QkFDVSxxRkFBSUgsdURBQU0sQ0FBQ1gsS0FBSyxDQUFDRSxNQUFOLENBQWFhLE1BQWIsQ0FBb0JkLElBQUksQ0FBQ1csRUFBekIsRUFBNkJDLElBQTlCLENBQVYsRUFEVixHQXZCSixDQTZCR1osSUFBSSxDQUFDTSx3QkFBTCxFQUNHLGtGQUFTLFNBQVMsQ0FBQyxxQkFBbkIsVUFDRSw4RUFBSyxTQUFTLENBQUMsV0FBZixVQUNFLDhFQUFLLFNBQVMsQ0FBQyxLQUFmLFVBRUNOLElBQUksQ0FBQ2UsS0FBTCxDQUFXQyxHQUFYLENBQWUsQ0FBQyxDQUFFQyxJQUFGLENBQVFOLEVBQVIsQ0FBRCxHQUFrQixDQUNoQyxLQUFNTyxLQUFJLENBQUduQixLQUFLLENBQUNFLE1BQU4sQ0FBYWdCLElBQWIsRUFBbUJOLEVBQW5CLENBQWIsQ0FDQTtBQUNBLE1BQU8sd0VBQUMsa0RBQUQsRUFBb0IsSUFBSSxDQUFFTyxJQUExQixFQUFXQSxJQUFJLENBQUNQLEVBQWhCLENBQVAsQ0FDRCxDQUpBLENBRkQsRUFERixFQURGLEVBOUJOLENBMkNHLENBQUNYLElBQUksQ0FBQ00sd0JBQU4sRUFDRyxxSkFDQ04sSUFBSSxDQUFDZSxLQUFMLENBQVdDLEdBQVgsQ0FBZSxDQUFDLENBQUVDLElBQUYsQ0FBUU4sRUFBUixDQUFELEdBQWtCLENBQzlCLEtBQU1PLEtBQUksQ0FBR25CLEtBQUssQ0FBQ0UsTUFBTixDQUFhZ0IsSUFBYixFQUFtQk4sRUFBbkIsQ0FBYixDQUNBO0FBQ0EsTUFBTyx3RUFBQyxrREFBRCxFQUFvQixJQUFJLENBQUVPLElBQTFCLEVBQVdBLElBQUksQ0FBQ1AsRUFBaEIsQ0FBUCxDQUNELENBSkYsQ0FERCxFQTVDTixDQXFERSx1RUFBQyxtREFBRCxJQXJERixHQURGLENBeURELENBakVELENBbUVlUSx1SEFBTyxDQUFDckIsSUFBRCxDQUF0QixFQUVBLEtBQU1zQixVQUFTLDA0SEFBZixDQVFBLEtBQU1DLE9BQU0sczFIQUFaIiwiZmlsZSI6Ii4vcGFja2FnZXMvZjEvc3JjL2NvbXBvbmVudHMvbGlzdC9saXN0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY29ubmVjdCwgc3R5bGVkLCBkZWNvZGUgfSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBJdGVtIGZyb20gXCIuL2xpc3QtaXRlbVwiO1xuaW1wb3J0IFBhZ2luYXRpb24gZnJvbSBcIi4vcGFnaW5hdGlvblwiO1xuXG5jb25zdCBMaXN0ID0gKHsgc3RhdGUgfSkgPT4ge1xuICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIGN1cnJlbnQgbGlzdC5cbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuICBsZXQgdGl0bGUgPSAnQmxvZyc7XG4gIGlmICggZGF0YS5pc0F3c21Kb2JPcGVuaW5nc0FyY2hpdmUgKSB7XG4gICAgdGl0bGUgPSAnQ2FyZWVyJztcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lcj5cbiAgICAgIHsvKiBJZiB0aGUgbGlzdCBpcyBhIGJsb2cgcG9zdHMsIHdlIHJlbmRlciBhIHRpdGxlLiAqL31cbiAgICAgIHtkYXRhLmlzUG9zdEFyY2hpdmUgJiYgKFxuICAgICAgICA8SGVhZGVyPlxuICAgICAgICAgIHt0aXRsZX1cbiAgICAgICAgPC9IZWFkZXI+XG4gICAgICApfVxuICAgICAgICB7LyogSWYgdGhlIGxpc3QgaXMgYSBBV1NNIEpvYiBjYXJlZXIgcGFnZSwgd2UgcmVuZGVyIGEgdGl0bGUuICovfVxuICAgICAge2RhdGEuaXNBd3NtSm9iT3BlbmluZ3NBcmNoaXZlICYmIChcbiAgICAgICAgPEhlYWRlcj5cbiAgICAgICAgICB7dGl0bGV9XG4gICAgICAgIDwvSGVhZGVyPlxuICAgICAgKX1cbiAgICAgIHsvKiBJZiB0aGUgbGlzdCBpcyBhIHRheG9ub215LCB3ZSByZW5kZXIgYSB0aXRsZS4gKi99XG4gICAgICB7ZGF0YS5pc1RheG9ub215ICYmIChcbiAgICAgICAgPEhlYWRlcj5cbiAgICAgICAgICB7ZGF0YS50YXhvbm9teX06e1wiIFwifVxuICAgICAgICAgIDxiPntkZWNvZGUoc3RhdGUuc291cmNlW2RhdGEudGF4b25vbXldW2RhdGEuaWRdLm5hbWUpfTwvYj5cbiAgICAgICAgPC9IZWFkZXI+XG4gICAgICApfVxuXG4gICAgICB7LyogSWYgdGhlIGxpc3QgaXMgZm9yIGEgc3BlY2lmaWMgYXV0aG9yLCB3ZSByZW5kZXIgYSB0aXRsZS4gKi99XG4gICAgICB7ZGF0YS5pc0F1dGhvciAmJiAoXG4gICAgICAgIDxIZWFkZXI+XG4gICAgICAgICAgQXV0aG9yOiA8Yj57ZGVjb2RlKHN0YXRlLnNvdXJjZS5hdXRob3JbZGF0YS5pZF0ubmFtZSl9PC9iPlxuICAgICAgICA8L0hlYWRlcj5cbiAgICAgICl9XG4gICAgXG4gICAgICB7LyogSXRlcmF0ZSBvdmVyIHRoZSBpdGVtcyBvZiB0aGUgbGlzdC4gKi99XG4gICAgICB7ZGF0YS5pc0F3c21Kb2JPcGVuaW5nc0FyY2hpdmUgJiYgKFxuICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cInNlY3Rpb24gam9iLWxpc3RpbmdcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicm93XCI+XG4gICAgICAgICAgICAgIHsvKiBJdGVyYXRlIG92ZXIgdGhlIGl0ZW1zIG9mIHRoZSBsaXN0LiAqL31cbiAgICAgICAgICAgICAge2RhdGEuaXRlbXMubWFwKCh7IHR5cGUsIGlkIH0pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBpdGVtID0gc3RhdGUuc291cmNlW3R5cGVdW2lkXTtcbiAgICAgICAgICAgICAgICAvLyBSZW5kZXIgb25lIEl0ZW0gY29tcG9uZW50IGZvciBlYWNoIG9uZS5cbiAgICAgICAgICAgICAgICByZXR1cm4gPEl0ZW0ga2V5PXtpdGVtLmlkfSBpdGVtPXtpdGVtfSAvPjtcbiAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvc2VjdGlvbj5cbiAgICAgICl9XG4gICAgICB7IWRhdGEuaXNBd3NtSm9iT3BlbmluZ3NBcmNoaXZlICYmIChcbiAgICAgICAgICA8PlxuICAgICAgICAgIHtkYXRhLml0ZW1zLm1hcCgoeyB0eXBlLCBpZCB9KSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IGl0ZW0gPSBzdGF0ZS5zb3VyY2VbdHlwZV1baWRdO1xuICAgICAgICAgICAgICAvLyBSZW5kZXIgb25lIEl0ZW0gY29tcG9uZW50IGZvciBlYWNoIG9uZS5cbiAgICAgICAgICAgICAgcmV0dXJuIDxJdGVtIGtleT17aXRlbS5pZH0gaXRlbT17aXRlbX0gLz47XG4gICAgICAgICAgICB9KX1cbiAgICAgICAgICA8Lz5cbiAgICAgICl9XG4gICAgICBcbiAgICAgIDxQYWdpbmF0aW9uIC8+XG4gICAgPC9Db250YWluZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KExpc3QpO1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQuc2VjdGlvbmBcbiAgd2lkdGg6IDEyMDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gIHBhZGRpbmctbGVmdDogMTVweDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbmA7XG5cbmNvbnN0IEhlYWRlciA9IHN0eWxlZC5oMWBcbiAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206M3JlbTtcblxuYDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/f1/src/components/list/list.js\n");

/***/ }),

/***/ "./packages/f1/src/components/list/pagination.js":
/*!*******************************************************!*\
  !*** ./packages/f1/src/components/list/pagination.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _frontity_components_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @frontity/components/link */ \"./node_modules/@frontity/components/link/index.tsx\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}/**\n * Pagination Component\n *\n * It's used to allow the user to paginate between a list of posts.\n *\n * The `state`, `actions`, `libraries` props are provided by the global context,\n * when we wrap this component in `connect(...)`\n */const Pagination=({state,actions})=>{// Get the total posts to be displayed based for the current link\nconst{next,previous}=state.source.get(state.router.link);// Pre-fetch the the next page if it hasn't been fetched yet.\nObject(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(()=>{if(next)actions.source.fetch(next);},[]);return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsxs\"])(\"div\",{children:[next&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{link:next,children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Text,{children:\"\\u2190 Older posts\"})}),previous&&next&&\" - \",previous&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_frontity_components_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{link:previous,children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Text,{children:\"Newer posts \\u2192\"})})]});};/**\n * Connect Pagination to global context to give it access to\n * `state`, `actions`, `libraries` via props\n *//* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(Pagination));const Text=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"em\", false?undefined:{target:\"enqjely0\",label:\"Text\"})( false?undefined:{name:\"vxgo1h\",styles:\"display:inline-block;margin-top:16px\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTmlub1xcYXBwXFxhd3NtLXByb2plY3RcXHBhY2thZ2VzXFxmMVxcc3JjXFxjb21wb25lbnRzXFxsaXN0XFxwYWdpbmF0aW9uLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdEc0IiLCJmaWxlIjoiQzpcXFVzZXJzXFxOaW5vXFxhcHBcXGF3c20tcHJvamVjdFxccGFja2FnZXNcXGYxXFxzcmNcXGNvbXBvbmVudHNcXGxpc3RcXHBhZ2luYXRpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBMaW5rIGZyb20gXCJAZnJvbnRpdHkvY29tcG9uZW50cy9saW5rXCI7XG5cbi8qKlxuICogUGFnaW5hdGlvbiBDb21wb25lbnRcbiAqXG4gKiBJdCdzIHVzZWQgdG8gYWxsb3cgdGhlIHVzZXIgdG8gcGFnaW5hdGUgYmV0d2VlbiBhIGxpc3Qgb2YgcG9zdHMuXG4gKlxuICogVGhlIGBzdGF0ZWAsIGBhY3Rpb25zYCwgYGxpYnJhcmllc2AgcHJvcHMgYXJlIHByb3ZpZGVkIGJ5IHRoZSBnbG9iYWwgY29udGV4dCxcbiAqIHdoZW4gd2Ugd3JhcCB0aGlzIGNvbXBvbmVudCBpbiBgY29ubmVjdCguLi4pYFxuICovXG5jb25zdCBQYWdpbmF0aW9uID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xuICAvLyBHZXQgdGhlIHRvdGFsIHBvc3RzIHRvIGJlIGRpc3BsYXllZCBiYXNlZCBmb3IgdGhlIGN1cnJlbnQgbGlua1xuICBjb25zdCB7IG5leHQsIHByZXZpb3VzIH0gPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcblxuICAvLyBQcmUtZmV0Y2ggdGhlIHRoZSBuZXh0IHBhZ2UgaWYgaXQgaGFzbid0IGJlZW4gZmV0Y2hlZCB5ZXQuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKG5leHQpIGFjdGlvbnMuc291cmNlLmZldGNoKG5leHQpO1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgey8qIElmIHRoZXJlJ3MgYSBuZXh0IHBhZ2UsIHJlbmRlciB0aGlzIGxpbmsgKi99XG4gICAgICB7bmV4dCAmJiAoXG4gICAgICAgIDxMaW5rIGxpbms9e25leHR9PlxuICAgICAgICAgIDxUZXh0PuKGkCBPbGRlciBwb3N0czwvVGV4dD5cbiAgICAgICAgPC9MaW5rPlxuICAgICAgKX1cblxuICAgICAge3ByZXZpb3VzICYmIG5leHQgJiYgXCIgLSBcIn1cblxuICAgICAgey8qIElmIHRoZXJlJ3MgYSBwcmV2aW91cyBwYWdlLCByZW5kZXIgdGhpcyBsaW5rICovfVxuICAgICAge3ByZXZpb3VzICYmIChcbiAgICAgICAgPExpbmsgbGluaz17cHJldmlvdXN9PlxuICAgICAgICAgIDxUZXh0Pk5ld2VyIHBvc3RzIOKGkjwvVGV4dD5cbiAgICAgICAgPC9MaW5rPlxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cbi8qKlxuICogQ29ubmVjdCBQYWdpbmF0aW9uIHRvIGdsb2JhbCBjb250ZXh0IHRvIGdpdmUgaXQgYWNjZXNzIHRvXG4gKiBgc3RhdGVgLCBgYWN0aW9uc2AsIGBsaWJyYXJpZXNgIHZpYSBwcm9wc1xuICovXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFBhZ2luYXRpb24pO1xuXG5jb25zdCBUZXh0ID0gc3R5bGVkLmVtYFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi10b3A6IDE2cHg7XG5gO1xuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9mMS9zcmMvY29tcG9uZW50cy9saXN0L3BhZ2luYXRpb24uanM/ZTFlZCJdLCJuYW1lcyI6WyJQYWdpbmF0aW9uIiwic3RhdGUiLCJhY3Rpb25zIiwibmV4dCIsInByZXZpb3VzIiwic291cmNlIiwiZ2V0Iiwicm91dGVyIiwibGluayIsInVzZUVmZmVjdCIsImZldGNoIiwiY29ubmVjdCIsIlRleHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7cVJBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUNBLEtBQU1BLFdBQVUsQ0FBRyxDQUFDLENBQUVDLEtBQUYsQ0FBU0MsT0FBVCxDQUFELEdBQXdCLENBQ3pDO0FBQ0EsS0FBTSxDQUFFQyxJQUFGLENBQVFDLFFBQVIsRUFBcUJILEtBQUssQ0FBQ0ksTUFBTixDQUFhQyxHQUFiLENBQWlCTCxLQUFLLENBQUNNLE1BQU4sQ0FBYUMsSUFBOUIsQ0FBM0IsQ0FFQTtBQUNBQyx1REFBUyxDQUFDLElBQU0sQ0FDZCxHQUFJTixJQUFKLENBQVVELE9BQU8sQ0FBQ0csTUFBUixDQUFlSyxLQUFmLENBQXFCUCxJQUFyQixFQUNYLENBRlEsQ0FFTixFQUZNLENBQVQsQ0FJQSxNQUNFLDBGQUVHQSxJQUFJLEVBQ0gsdUVBQUMsaUVBQUQsRUFBTSxJQUFJLENBQUVBLElBQVosVUFDRSx1RUFBQyxJQUFELGlDQURGLEVBSEosQ0FRR0MsUUFBUSxFQUFJRCxJQUFaLEVBQW9CLEtBUnZCLENBV0dDLFFBQVEsRUFDUCx1RUFBQyxpRUFBRCxFQUFNLElBQUksQ0FBRUEsUUFBWixVQUNFLHVFQUFDLElBQUQsaUNBREYsRUFaSixHQURGLENBbUJELENBNUJELENBOEJBO0FBQ0E7QUFDQTtBQUNBLEdBQ2VPLHVIQUFPLENBQUNYLFVBQUQsQ0FBdEIsRUFFQSxLQUFNWSxLQUFJLHc4RUFBViIsImZpbGUiOiIuL3BhY2thZ2VzL2YxL3NyYy9jb21wb25lbnRzL2xpc3QvcGFnaW5hdGlvbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IExpbmsgZnJvbSBcIkBmcm9udGl0eS9jb21wb25lbnRzL2xpbmtcIjtcblxuLyoqXG4gKiBQYWdpbmF0aW9uIENvbXBvbmVudFxuICpcbiAqIEl0J3MgdXNlZCB0byBhbGxvdyB0aGUgdXNlciB0byBwYWdpbmF0ZSBiZXR3ZWVuIGEgbGlzdCBvZiBwb3N0cy5cbiAqXG4gKiBUaGUgYHN0YXRlYCwgYGFjdGlvbnNgLCBgbGlicmFyaWVzYCBwcm9wcyBhcmUgcHJvdmlkZWQgYnkgdGhlIGdsb2JhbCBjb250ZXh0LFxuICogd2hlbiB3ZSB3cmFwIHRoaXMgY29tcG9uZW50IGluIGBjb25uZWN0KC4uLilgXG4gKi9cbmNvbnN0IFBhZ2luYXRpb24gPSAoeyBzdGF0ZSwgYWN0aW9ucyB9KSA9PiB7XG4gIC8vIEdldCB0aGUgdG90YWwgcG9zdHMgdG8gYmUgZGlzcGxheWVkIGJhc2VkIGZvciB0aGUgY3VycmVudCBsaW5rXG4gIGNvbnN0IHsgbmV4dCwgcHJldmlvdXMgfSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuXG4gIC8vIFByZS1mZXRjaCB0aGUgdGhlIG5leHQgcGFnZSBpZiBpdCBoYXNuJ3QgYmVlbiBmZXRjaGVkIHlldC5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAobmV4dCkgYWN0aW9ucy5zb3VyY2UuZmV0Y2gobmV4dCk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXY+XG4gICAgICB7LyogSWYgdGhlcmUncyBhIG5leHQgcGFnZSwgcmVuZGVyIHRoaXMgbGluayAqL31cbiAgICAgIHtuZXh0ICYmIChcbiAgICAgICAgPExpbmsgbGluaz17bmV4dH0+XG4gICAgICAgICAgPFRleHQ+4oaQIE9sZGVyIHBvc3RzPC9UZXh0PlxuICAgICAgICA8L0xpbms+XG4gICAgICApfVxuXG4gICAgICB7cHJldmlvdXMgJiYgbmV4dCAmJiBcIiAtIFwifVxuXG4gICAgICB7LyogSWYgdGhlcmUncyBhIHByZXZpb3VzIHBhZ2UsIHJlbmRlciB0aGlzIGxpbmsgKi99XG4gICAgICB7cHJldmlvdXMgJiYgKFxuICAgICAgICA8TGluayBsaW5rPXtwcmV2aW91c30+XG4gICAgICAgICAgPFRleHQ+TmV3ZXIgcG9zdHMg4oaSPC9UZXh0PlxuICAgICAgICA8L0xpbms+XG4gICAgICApfVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuLyoqXG4gKiBDb25uZWN0IFBhZ2luYXRpb24gdG8gZ2xvYmFsIGNvbnRleHQgdG8gZ2l2ZSBpdCBhY2Nlc3MgdG9cbiAqIGBzdGF0ZWAsIGBhY3Rpb25zYCwgYGxpYnJhcmllc2AgdmlhIHByb3BzXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoUGFnaW5hdGlvbik7XG5cbmNvbnN0IFRleHQgPSBzdHlsZWQuZW1gXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXRvcDogMTZweDtcbmA7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/f1/src/components/list/pagination.js\n");

/***/ })

}]);